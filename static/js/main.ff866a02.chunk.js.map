{"version":3,"sources":["assets/images/done.svg","assets/images/pin.svg","assets/images/edit.svg","assets/images/add.svg","assets/images/delete.svg","context.jsx","components/TodoItem/TodoSubItem/TodoSubItem.jsx","components/TodoItem/TodoItem.jsx","reducer.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Context","React","TodoSubItem","props","useState","subTitle","setSubTitle","disabled","setDisabled","className","item","isDone","src","done","alt","type","onChange","dispatch","toggleSubTodoAC","id","subId","style","textDecoration","title","value","event","target","onKeyPress","key","editSubTodoAC","onBlur","autoFocus","placeholder","edit","onClick","pin","deleteSubTodoAC","TodoItem","useContext","addSubTodoAC","deleteTodoAC","toggleTodoAC","checked","add","Date","now","remove","subTodo","map","reverse","state","action","payload","progress","subItem","filter","App","todos","JSON","parse","localStorage","getItem","useReducer","reducer","todoTitle","setTodoTitle","useEffect","setItem","stringify","Provider","addTodoAC","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff866a02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/done.6fc8520a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pin.21f97986.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.718de568.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.b0564449.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.ee635b5a.svg\";","import * as React from \"react\";\r\n\r\nexport const Context = React.createContext();","import React, {useState} from \"react\";\r\nimport pin from './../../../assets/images/pin.svg';\r\nimport edit from './../../../assets/images/edit.svg';\r\nimport done from './../../../assets/images/done.svg';\r\n\r\nconst TodoSubItem = (props) => {\r\n    const [subTitle, setSubTitle] = useState('');\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const editSubTodo = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.dispatch(props.editSubTodoAC(props.item.subId, props.id, {title: subTitle}));\r\n            setDisabled(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='todo-subitem'>\r\n            <div className='todo-subitem__check'>\r\n                {props.item.isDone\r\n                    ? <img src={done} className='isDone' alt=\"done\"/>\r\n                    : <span className={'checkSpan'}/>}\r\n                <input className='isDoneCheckbox' type=\"checkbox\"\r\n                       onChange={() => props.dispatch(props.toggleSubTodoAC(props.id, props.item.subId))}/>\r\n            </div>\r\n\r\n            {disabled\r\n                ? <span\r\n                    style={props.item.isDone ? {textDecoration: 'line-through'} : {}}>{props.item.title || 'Press edit'}</span>\r\n                : <input type=\"text\"\r\n                         value={subTitle}\r\n                         onChange={event => setSubTitle(event.target.value)}\r\n                         onKeyPress={editSubTodo}\r\n                         onBlur={() => {setDisabled(true)}}\r\n                         autoFocus={true}\r\n                         placeholder={'Введите подцель'}/>\r\n            }\r\n\r\n            <div className='buttons'>\r\n                <img src={edit} alt='edit' className='button' onClick={() => {setDisabled(false)}}/>\r\n                <img src={pin} alt='remove' className='button' onClick={() => props.dispatch(props.deleteSubTodoAC(props.id, props.item.subId))}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoSubItem;","import React, {useContext} from \"react\";\r\nimport {Context} from \"../../context\";\r\nimport TodoSubItem from \"./TodoSubItem/TodoSubItem\";\r\nimport add from \"../../assets/images/add.svg\";\r\nimport remove from \"../../assets/images/delete.svg\";\r\nimport done from \"../../assets/images/done.svg\";\r\n\r\nconst TodoItem = (props) => {\r\n    const {\r\n        dispatch, addSubTodoAC, deleteTodoAC,\r\n        toggleTodoAC, editSubTodoAC, toggleSubTodoAC, deleteSubTodoAC\r\n    } = useContext(Context);\r\n\r\n    return (\r\n        <>\r\n            <div className={props.isDone ? 'todo-item todo-item--done' : 'todo-item'}>\r\n                <div>\r\n                    {props.isDone\r\n                        ? <img src={done} className='isDone isDone--todo' alt=\"done\"/>\r\n                        : <span className={'checkSpan checkSpan--todo'}/>\r\n                    }\r\n                    <input type=\"checkbox\"\r\n                           className={'isDoneCheckbox isDoneCheckbox--todo'}\r\n                           checked={props.isDone}\r\n                           onChange={() => dispatch(toggleTodoAC(props.id))}/>\r\n                </div>\r\n\r\n                <span>{props.title}</span>\r\n\r\n                <div className='buttons'>\r\n                    <img src={add}\r\n                         className='button'\r\n                         onClick={() => dispatch(addSubTodoAC(props.id, {title: '', subId: Date.now()}))}\r\n                         alt='add'/>\r\n\r\n                    <img src={remove} alt={'delete'} className='button'\r\n                         onClick={() => dispatch(deleteTodoAC(props.id))}/>\r\n                </div>\r\n            </div>\r\n            {props.subTodo.map(item => <TodoSubItem key={item.subId} {...props} dispatch={dispatch}\r\n                                                    toggleSubTodoAC={toggleSubTodoAC} deleteSubTodoAC={deleteSubTodoAC}\r\n                                                    editSubTodoAC={editSubTodoAC}\r\n                                                    item={item}/>).reverse()}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default TodoItem;","const ADD = 'ADD';\r\nconst ADD_SUB_TODO = 'ADD_SUB_TODO';\r\nconst DELETE = 'DELETE';\r\nconst TOGGLE_TODO = 'TOGGLE_TODO';\r\nconst EDIT_SUB_TODO = 'EDIT_SUB_TODO';\r\nconst TOGGLE_SUB_TODO = 'TOGGLE_SUB_TODO';\r\nconst DELETE_SUB_TODO = 'DELETE_SUB_TODO';\r\n\r\nexport default function (state, action) {\r\n    switch (action.type) {\r\n        case ADD:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: Date.now(),\r\n                    title: action.payload,\r\n                    isDone: false,\r\n                    subTodo: [],\r\n                    progress: 0\r\n                }\r\n            ];\r\n        case ADD_SUB_TODO:\r\n            return state.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        subTodo: [\r\n                            ...item.subTodo,\r\n                            {\r\n                                ...action.payload,\r\n                                subId: Date.now(),\r\n                                isDone: false\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        case TOGGLE_TODO:\r\n            return state.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        isDone: !item.isDone\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        case TOGGLE_SUB_TODO:\r\n            return state.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        subTodo:\r\n                            item.subTodo.map(subItem => {\r\n                                if (subItem.subId === action.subId) {\r\n                                    return {\r\n                                        ...subItem,\r\n                                        isDone: !subItem.isDone\r\n                                    }\r\n                                }\r\n                                return subItem;\r\n                            })\r\n                    };\r\n                }\r\n                return item;\r\n            });\r\n        case EDIT_SUB_TODO:\r\n            return state.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        subTodo:\r\n                            item.subTodo.map(subItem => {\r\n                                if (subItem.subId === action.subId) {\r\n                                    return {\r\n                                        ...subItem,\r\n                                        ...action.payload\r\n                                    }\r\n                                }\r\n                                return subItem;\r\n                            })\r\n                    };\r\n                }\r\n                return item;\r\n            });\r\n        case DELETE:\r\n            return state.filter(item => item.id !== action.id);\r\n        case DELETE_SUB_TODO:\r\n            return state.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        subTodo: item.subTodo.filter(subItem => subItem.subId !== action.subId)\r\n                    };\r\n                }\r\n                return item;\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addTodoAC = (todoTitle) => ({type: ADD, payload: todoTitle});\r\nexport const addSubTodoAC = (id, payload) => ({type: ADD_SUB_TODO, id, payload});\r\n\r\nexport const toggleTodoAC = (id) => ({type: TOGGLE_TODO, id});\r\nexport const toggleSubTodoAC = (id, subId) => ({type: TOGGLE_SUB_TODO, subId, id});\r\n\r\nexport const editSubTodoAC = (subId, id, payload) => ({type: EDIT_SUB_TODO, subId, id, payload});\r\n\r\nexport const deleteTodoAC = (id) => ({type: DELETE, id});\r\nexport const deleteSubTodoAC = (id, subId) => ({type: DELETE_SUB_TODO, subId, id});","import React, {useEffect, useReducer, useState} from 'react';\nimport './assets/styles/styles.scss';\nimport TodoItem from \"./components/TodoItem/TodoItem\";\nimport {Context} from \"./context\";\nimport reducer, {\n    addSubTodoAC,\n    addTodoAC,\n    deleteSubTodoAC,\n    deleteTodoAC,\n    editSubTodoAC,\n    toggleSubTodoAC,\n    toggleTodoAC\n} from \"./reducer\";\n\nconst App = () => {\n    const todos = JSON.parse(localStorage.getItem('todos')) || [];\n    const [state, dispatch] = useReducer(reducer, todos);\n    const [todoTitle, setTodoTitle] = useState('');\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(state))\n    }, [state]);\n\n    const addTodo = (event) => {\n        if (event.key === 'Enter') {\n            dispatch(addTodoAC(todoTitle));\n            setTodoTitle('');\n        }\n    };\n    return (\n        <Context.Provider value={{dispatch, addSubTodoAC, deleteTodoAC, toggleTodoAC, editSubTodoAC, toggleSubTodoAC, deleteSubTodoAC}}>\n            <div className=\"App\">\n                <h3>Tasker</h3>\n                <input className='main-input'\n                       type=\"text\"\n                       placeholder='Введите вашу цель'\n                       value={todoTitle}\n                       onChange={event => setTodoTitle(event.target.value)}\n                       autoFocus={true}\n                       onKeyPress={addTodo}\n                />\n                {state.map(item => <TodoItem key={item.id} subTodo={item.subTodo} isDone={item.isDone} id={item.id}\n                                             title={item.title}/>).reverse()}\n            </div>\n        </Context.Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}